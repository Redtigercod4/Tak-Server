"use strict";(self.webpackChunkdocusaurus_static=self.webpackChunkdocusaurus_static||[]).push([[278],{7822:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var o=n(5893),r=n(1151);const i={},a="Make the Connection",c={id:"federation/maketheconnection",title:"Make the Connection",description:"Now that we have enabled federation and shared our CA with the other TAK server authority, we are ready to make the connection and start sharing. For this step, only ONE of the servers creates an outgoing connection to the other. If you are starting the connection, go back to the Manage Federates page where you enabled federation from step 1. You will now see three sections, Active Connections, Outgoing Connection Configuration, and Federate Configuration. To create an outgoing connection, click on the corresponding link, and enter in the address and port of the destination server. You can also pick the protocol version (make sure it is the right protocol for the port you are connecting to!), reconnection interval (how long between retries if the connection is lost), and whether or not the connection will be enabled on creation.",source:"@site/docs/federation/maketheconnection.md",sourceDirName:"federation",slug:"/federation/maketheconnection",permalink:"/docs/federation/maketheconnection",draft:!1,unlisted:!1,editUrl:"https://gitlab.com/octospacc/editocttrialTools/-/blob/main/docusaurus-static/docs/federation/maketheconnection.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Upload Federate Certificate",permalink:"/docs/federation/uploadfederatecert"},next:{title:"Federated Group Mapping",permalink:"/docs/federation/federatedgroupmapping"}},s={},d=[];function h(e){const t={h1:"h1",img:"img",p:"p",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"make-the-connection",children:"Make the Connection"}),"\n",(0,o.jsx)(t.p,{children:"Now that we have enabled federation and shared our CA with the other TAK server authority, we are ready to make the connection and start sharing. For this step, only ONE of the servers creates an outgoing connection to the other. If you are starting the connection, go back to the Manage Federates page where you enabled federation from step 1. You will now see three sections, Active Connections, Outgoing Connection Configuration, and Federate Configuration. To create an outgoing connection, click on the corresponding link, and enter in the address and port of the destination server. You can also pick the protocol version (make sure it is the right protocol for the port you are connecting to!), reconnection interval (how long between retries if the connection is lost), and whether or not the connection will be enabled on creation."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Active Connections",src:n(7272).Z+"",width:"1053",height:"609"})}),"\n",(0,o.jsx)(t.p,{children:"Now that you have created and started a connection, you will notice that no information is yet flowing between federates. This is because you and your fellow federate must specify which filtering groups you will allow to flow out of and into your server. To manage this, click on the Manage Groups link in the corresponding row of the Federate Configuration section. Here you can specify the groups, including the special __ANON__ group if you want. Once both servers have configured the groups, traffic will start to flow. A server restart is not necessary for these changes to take effect."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Federate Groups",src:n(4807).Z+"",width:"1053",height:"742"})})]})}function u(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},7272:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/fed_3-f3c41c0b4d19555b0c4a046c4fda8d5b.png"},4807:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/fed_4-ac014207b1ba39bcf9cca69d8da9bd8f.png"},1151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>a});var o=n(7294);const r={},i=o.createContext(r);function a(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);