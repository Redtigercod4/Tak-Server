"use strict";(self.webpackChunkdocusaurus_static=self.webpackChunkdocusaurus_static||[]).push([[7240],{3642:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var o=n(5893),i=n(1151);const r={},s="Overview",a={id:"configuration/overview",title:"Overview",description:"Configuration is primarily done through the web interface. Changes made in the interface will be reflected in the /opt/tak/CoreConfig.xml file.  If that file does not exist (e.g. on a fresh install), then when TAK Server starts up it will copy /opt/tak/CoreConfig.example.xml. The example has many commented out options.  Notable configuration options:",source:"@site/docs/configuration/overview.md",sourceDirName:"configuration",slug:"/configuration/overview",permalink:"/docs/configuration/overview",draft:!1,unlisted:!1,editUrl:"https://gitlab.com/octospacc/editocttrialTools/-/blob/main/docusaurus-static/docs/configuration/overview.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Software Installation Location",permalink:"/docs/softwareinstallationlocation"},next:{title:"Configuring Security Through Web UI (Certificates/TLS)",permalink:"/docs/configuration/configurewebui"}},c={},l=[];function u(e){const t={h1:"h1",li:"li",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(t.p,{children:"Configuration is primarily done through the web interface. Changes made in the interface will be reflected in the /opt/tak/CoreConfig.xml file.  If that file does not exist (e.g. on a fresh install), then when TAK Server starts up it will copy /opt/tak/CoreConfig.example.xml. The example has many commented out options.  Notable configuration options:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["inputs: In the <network> section there are a series of <input> elements.  These define ports the server will listen on.  Protocol options are as follows:","\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"udp: standard CoT udp protocol; unencrypted"}),"\n",(0,o.jsx)(t.li,{children:"mcast: like udp, but has additional configuration option for multicast group"}),"\n",(0,o.jsx)(t.li,{children:"tcp: publish-only port; standard CoT tcp protocol; unencrypted"}),"\n",(0,o.jsx)(t.li,{children:"stcp: streaming/bi-directional; this is for ATAK to connect to.  Unencrypted, for testing only"}),"\n",(0,o.jsx)(t.li,{children:"tls: TCP+TLS streaming/bi-directional for encrypted communication with TAK clients"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.li,{children:"<auth> : you can use either a flat file or an LDAP backend for group filtering support"}),"\n",(0,o.jsx)(t.li,{children:"<security>: here you specify the keystore files to use for the secure port(s)"}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>s});var o=n(7294);const i={},r=o.createContext(i);function s(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);