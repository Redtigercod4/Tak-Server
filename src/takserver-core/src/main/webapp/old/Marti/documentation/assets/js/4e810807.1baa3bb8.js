"use strict";(self.webpackChunkdocusaurus_static=self.webpackChunkdocusaurus_static||[]).push([[9349],{5901:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var o=r(5893),a=r(1151);const s={},n="Upload Federate Certificate",i={id:"federation/uploadfederatecert",title:"Upload Federate Certificate",description:"In order for the federate servers to trust each other and their ATAK clients, they must share each others certificate authorities (CAs) in order to create a separate federate trust-store. One of the key components to how TAK Server satisfies all the restrictions is that we use one trust-store for local users, and one for Federates.  The trust-store contains all the valid CAs that you will allow client certificates from.  By having separate trust-stores, we can have the Federation channels allow connections with certificates from \u201coutside\u201d CAs, while not allowing ATAKs with certs from those \u201coutside\u201d CAs to make direct connections to our server.",source:"@site/docs/federation/uploadfederatecert.md",sourceDirName:"federation",slug:"/federation/uploadfederatecert",permalink:"/docs/federation/uploadfederatecert",draft:!1,unlisted:!1,editUrl:"https://gitlab.com/octospacc/editocttrialTools/-/blob/main/docusaurus-static/docs/federation/uploadfederatecert.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Enable Federation",permalink:"/docs/federation/enablefederation"},next:{title:"Make the Connection",permalink:"/docs/federation/maketheconnection"}},c={},d=[];function l(e){const t={h1:"h1",img:"img",p:"p",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"upload-federate-certificate",children:"Upload Federate Certificate"}),"\n",(0,o.jsx)(t.p,{children:"In order for the federate servers to trust each other and their ATAK clients, they must share each others certificate authorities (CAs) in order to create a separate federate trust-store. One of the key components to how TAK Server satisfies all the restrictions is that we use one trust-store for local users, and one for Federates.  The trust-store contains all the valid CAs that you will allow client certificates from.  By having separate trust-stores, we can have the Federation channels allow connections with certificates from \u201coutside\u201d CAs, while not allowing ATAKs with certs from those \u201coutside\u201d CAs to make direct connections to our server."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Federate Certificate Authorities Page",src:r(4010).Z+"",width:"1053",height:"321"})}),"\n",(0,o.jsx)(t.p,{children:"Generally, we share the public CA, which you can find at /opt/tak/cert/files/ca.pem, via some third channel such as email or a USB drive. Once you have traded CAs, go the the Manage Federate Certifate Authorities page and upload the CA of the federate you want to connect to."})]})}function h(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},4010:(e,t,r)=>{r.d(t,{Z:()=>o});const o=r.p+"assets/images/fed_2-6f47952affff8c0295409c5c4035b9e5.png"},1151:(e,t,r)=>{r.d(t,{Z:()=>i,a:()=>n});var o=r(7294);const a={},s=o.createContext(a);function n(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:n(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);